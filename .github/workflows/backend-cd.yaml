name: Backend Continuous Deployment

env:
  PYTHON_VERSION: '3.10'
  KUBECONFIG: ${{ github.workspace }}/starter/backend/kubeconfig

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
        working-directory: starter/backend

      - name: Run linting
        run: pipenv run lint
        working-directory: starter/backend

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
        working-directory: starter/backend

      - name: Run tests
        run: pipenv run test
        working-directory: starter/backend

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
        working-directory: starter/backend

      - name: Build project
        run: docker build -t movie-backend .
        working-directory: starter/backend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      
      - name: Login to AWS ECR Registry
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Fetch short Git SHA
        id: vars
        run: echo "SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      
      - name: Build, tag, and push Docker image
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          IMAGE_URI=$ECR_REGISTRY/${{ vars.ECR_REPOSITORY_BE }}
          echo "ECR_REGISTRY: $ECR_REGISTRY"
          echo "IMAGE_URI: $IMAGE_URI"
          docker build -t $IMAGE_URI:latest -t $IMAGE_URI:$SHA_SHORT .
          docker push $IMAGE_URI:latest
          docker push $IMAGE_URI:$SHA_SHORT
        working-directory: starter/backend
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Configure kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ vars.CLUSTER_NAME }} --kubeconfig $PWD/kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl config current-context
          kubectl config use-context arn:aws:eks:${{ vars.AWS_REGION }}:038713363621:cluster/saurav-eks
        working-directory: starter/backend
      
      - name: Apply manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
        working-directory: starter/backend
      
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/backend backend=$ECR_REGISTRY/${{ vars.ECR_REPOSITORY_FE }}:latest --namespace ${{ vars.KUBE_NAMESPACE }}
          kubectl rollout status deployment/backend --namespace ${{ vars.KUBE_NAMESPACE }} --timeout=5m
        working-directory: starter/backend